// go run mkasm.go darwin amd64
// Code generated by the command above; DO NOT EDIT.
#include "textflag.h"
TEXT ·libc_getfsstat_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_getfsstat(SB)
TEXT ·libc_fdopendir_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_fdopendir(SB)
TEXT ·libc_sendfile_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_sendfile(SB)
TEXT ·libc_getgroups_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_getgroups(SB)
TEXT ·libc_setgroups_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_setgroups(SB)
TEXT ·libc_wait4_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_wait4(SB)
// 这段汇编是Go语言的汇编代码，它定义了一个名为"libc_accept_trampoline"的函数入口点（entry point），并将其绑定到名为"SB"的符号表中。
// 该函数不会使用栈空间（NOSPLIT）并且没有任何输入参数和返回值（$0-0）。最后，函数执行一个简单的跳转指令（JMP），以将控制权传递给名为"libc_accept"的函数，该函数也被绑定到"SB"符号表中。

// 在Go语言的汇编中，TEXT指令是用来定义一个函数入口点（entry point）的。通过使用这种指令，可以将Go语言代码与汇编代码联系起来。
// 在这个例子中，"libc_accept_trampoline"被定义为一个入口点函数，因此可以在Go语言代码中直接调用它。
// 当Go程序需要执行某些底层操作时，可以使用这个入口点函数来调用外部库中的C函数。由于该函数的名称和地址已经绑定到Go程序的符号表中，因此可以简单地通过函数名来引用它，就像调用任何其他Go函数一样。

// 预定义的标记实际上就是在汇编代码中被声明或定义的符号、指令和数据类型等。在编写汇编代码时，你可以使用这些标记来告诉编译器它们的含义和用途，以便于编译器能够正确地处理汇编代码。

//例如，在Go语言的汇编中，TEXT指令就是一个预定义的标记，它用于定义函数入口点。当编译器遇到TEXT指令时，它会知道这个标记表示函数开头，并且会生成相应的机器码来执行这个函数。

//类似地，Go语言还提供了其他一些预定义的标记，例如FUNCDATA、PCDATA、DATA等，用于定义常量、变量、结构体等数据类型。当编译器遇到这些标记时，它会根据预定义的规则进行处理，并生成相应的机器码。

//总之，预定义的标记在汇编代码中扮演着非常重要的角色，它们为编译器提供了必要的上下文信息，使得它们能够正确地理解和处理汇编代码。
TEXT ·libc_accept_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_accept(SB)
TEXT ·libc_bind_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_bind(SB)
TEXT ·libc_connect_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_connect(SB)
TEXT ·libc_socket_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_socket(SB)
TEXT ·libc_getsockopt_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_getsockopt(SB)
TEXT ·libc_setsockopt_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_setsockopt(SB)
TEXT ·libc_getpeername_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_getpeername(SB)
TEXT ·libc_getsockname_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_getsockname(SB)
TEXT ·libc_shutdown_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_shutdown(SB)
TEXT ·libc_socketpair_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_socketpair(SB)
TEXT ·libc_recvfrom_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_recvfrom(SB)
TEXT ·libc_sendto_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_sendto(SB)
TEXT ·libc_recvmsg_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_recvmsg(SB)
TEXT ·libc_sendmsg_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_sendmsg(SB)
TEXT ·libc_kevent_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_kevent(SB)
TEXT ·libc_utimes_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_utimes(SB)
TEXT ·libc_futimes_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_futimes(SB)
TEXT ·libc_fcntl_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_fcntl(SB)
TEXT ·libc_pipe_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_pipe(SB)
TEXT ·libc_utimensat_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_utimensat(SB)
TEXT ·libc_kill_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_kill(SB)
TEXT ·libc_access_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_access(SB)
TEXT ·libc_adjtime_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_adjtime(SB)
TEXT ·libc_chdir_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_chdir(SB)
TEXT ·libc_chflags_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_chflags(SB)
TEXT ·libc_chmod_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_chmod(SB)
TEXT ·libc_chown_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_chown(SB)
TEXT ·libc_chroot_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_chroot(SB)
TEXT ·libc_close_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_close(SB)
TEXT ·libc_closedir_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_closedir(SB)
TEXT ·libc_dup_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_dup(SB)
TEXT ·libc_dup2_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_dup2(SB)
TEXT ·libc_exchangedata_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_exchangedata(SB)
TEXT ·libc_fchdir_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_fchdir(SB)
TEXT ·libc_fchflags_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_fchflags(SB)
TEXT ·libc_fchmod_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_fchmod(SB)
TEXT ·libc_fchown_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_fchown(SB)
TEXT ·libc_flock_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_flock(SB)
TEXT ·libc_fpathconf_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_fpathconf(SB)
TEXT ·libc_fsync_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_fsync(SB)
TEXT ·libc_ftruncate_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_ftruncate(SB)
TEXT ·libc_getdtablesize_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_getdtablesize(SB)
TEXT ·libc_getegid_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_getegid(SB)
TEXT ·libc_geteuid_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_geteuid(SB)
TEXT ·libc_getgid_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_getgid(SB)
TEXT ·libc_getpgid_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_getpgid(SB)
TEXT ·libc_getpgrp_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_getpgrp(SB)
TEXT ·libc_getpid_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_getpid(SB)
TEXT ·libc_getppid_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_getppid(SB)
TEXT ·libc_getpriority_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_getpriority(SB)
TEXT ·libc_getrlimit_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_getrlimit(SB)
TEXT ·libc_getrusage_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_getrusage(SB)
TEXT ·libc_getsid_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_getsid(SB)
TEXT ·libc_getuid_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_getuid(SB)
TEXT ·libc_issetugid_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_issetugid(SB)
TEXT ·libc_kqueue_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_kqueue(SB)
TEXT ·libc_lchown_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_lchown(SB)
TEXT ·libc_link_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_link(SB)
TEXT ·libc_listen_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_listen(SB)
TEXT ·libc_mkdir_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_mkdir(SB)
TEXT ·libc_mkfifo_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_mkfifo(SB)
TEXT ·libc_mknod_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_mknod(SB)
TEXT ·libc_mlock_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_mlock(SB)
TEXT ·libc_mlockall_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_mlockall(SB)
TEXT ·libc_mprotect_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_mprotect(SB)
TEXT ·libc_munlock_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_munlock(SB)
TEXT ·libc_munlockall_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_munlockall(SB)
TEXT ·libc_open_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_open(SB)
TEXT ·libc_pathconf_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_pathconf(SB)
TEXT ·libc_pread_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_pread(SB)
TEXT ·libc_pwrite_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_pwrite(SB)
TEXT ·libc_read_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_read(SB)
TEXT ·libc_readdir_r_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_readdir_r(SB)
TEXT ·libc_readlink_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_readlink(SB)
TEXT ·libc_rename_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_rename(SB)
TEXT ·libc_revoke_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_revoke(SB)
TEXT ·libc_rmdir_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_rmdir(SB)
TEXT ·libc_lseek_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_lseek(SB)
TEXT ·libc_select_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_select(SB)
TEXT ·libc_setegid_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_setegid(SB)
TEXT ·libc_seteuid_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_seteuid(SB)
TEXT ·libc_setgid_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_setgid(SB)
TEXT ·libc_setlogin_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_setlogin(SB)
TEXT ·libc_setpgid_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_setpgid(SB)
TEXT ·libc_setpriority_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_setpriority(SB)
TEXT ·libc_setprivexec_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_setprivexec(SB)
TEXT ·libc_setregid_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_setregid(SB)
TEXT ·libc_setreuid_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_setreuid(SB)
TEXT ·libc_setrlimit_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_setrlimit(SB)
TEXT ·libc_setsid_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_setsid(SB)
TEXT ·libc_settimeofday_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_settimeofday(SB)
TEXT ·libc_setuid_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_setuid(SB)
TEXT ·libc_symlink_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_symlink(SB)
TEXT ·libc_sync_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_sync(SB)
TEXT ·libc_truncate_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_truncate(SB)
TEXT ·libc_umask_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_umask(SB)
TEXT ·libc_undelete_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_undelete(SB)
TEXT ·libc_unlink_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_unlink(SB)
TEXT ·libc_unmount_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_unmount(SB)
TEXT ·libc_write_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_write(SB)
TEXT ·libc_writev_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_writev(SB)
TEXT ·libc_mmap_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_mmap(SB)
TEXT ·libc_munmap_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_munmap(SB)
TEXT ·libc_fork_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_fork(SB)
TEXT ·libc_ioctl_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_ioctl(SB)
TEXT ·libc_execve_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_execve(SB)
TEXT ·libc_exit_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_exit(SB)
TEXT ·libc_sysctl_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_sysctl(SB)
TEXT ·libc_unlinkat_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_unlinkat(SB)
TEXT ·libc_openat_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_openat(SB)
TEXT ·libc_getcwd_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_getcwd(SB)
TEXT ·libc_fstat64_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_fstat64(SB)
TEXT ·libc_fstatfs64_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_fstatfs64(SB)
TEXT ·libc_gettimeofday_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_gettimeofday(SB)
TEXT ·libc_lstat64_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_lstat64(SB)
TEXT ·libc_stat64_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_stat64(SB)
TEXT ·libc_statfs64_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_statfs64(SB)
TEXT ·libc_fstatat64_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_fstatat64(SB)
TEXT ·libc_ptrace_trampoline(SB),NOSPLIT,$0-0
	JMP	libc_ptrace(SB)
